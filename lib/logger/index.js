import log4js from"log4js";import{chalk,Loging}from"#util";let hook;const _log=Symbol(`_log`),logger_map=new Map;export const log4js_config={appenders:{stdout:{type:`stdout`,layout:{type:`pattern`,pattern:`%[[%d{hh:mm:ss.SSS}][%4.4p]%]%c %m`}},dateFile_default:{type:`dateFile`,filename:`Log/default/INFO`,pattern:`yyyy-MM-dd.log`,numBackups:180,alwaysIncludePattern:!0,layout:{type:`pattern`,pattern:`%[[%d{hh:mm:ss.SSS}][%4.4p]%] %m`},compress:!0}},categories:{default:{appenders:[`stdout`,`dateFile_default`],level:`ALL`}}};export function makeLogger(c=`default`,l=`INFO`,u={string:!0},d=10){let f=log4js.levels.getLevel(l).level,p=logger_map.get(c);p||(p=Object.create(null),p._log=function(e,o){return o=o.map(e=>Loging(e,this.inspect)),hook?.(c,e,o),e.level>=f&&this[_log](e,o)},p.setHook=c===`default`?e=>hook=e:function(e){this._log=e?function(o,s){return s=s.map(e=>Loging(e,this.inspect)),e(c,o,s),o.level>=f&&this[_log](o,s)}:function(e,o){return e.level>=f&&this[_log](e,o.map(e=>Loging(e,this.inspect)))}},logger_map.set(c,p));let m=`dateFile_${c}`;log4js_config.appenders[m]={...log4js_config.appenders.dateFile_default,filename:`Log/${c}/${l}`};let h=(d-c.length)/2;return h>0?c=`${` `.repeat(Math.ceil(h))}${c}${` `.repeat(Math.floor(h))}`:h<0&&(c=`${c.slice(0,d-1)}.`),c=chalk.blue(`[${c}]`),log4js_config.categories[c]={appenders:stdout_closed?[m]:[`stdout`,m],level:`ALL`},log4js.configure(log4js_config),Object.setPrototypeOf(p,log4js.getLogger(c)),p[_log]=Object.getPrototypeOf(p)._log,p.inspect=u,p}export function getLogger(e=`default`){return logger_map.get(e)??makeLogger(e)}let stdout_closed=!1;export function closeStdout(){if(!stdout_closed){for(let e in stdout_closed=!0,delete log4js_config.appenders.stdout,log4js_config.categories)log4js_config.categories[e].appenders.splice(0,1);log4js.configure(log4js_config)}}