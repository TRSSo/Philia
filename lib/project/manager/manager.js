import{makeLogger}from"#logger";import*as Philia from"../project/philia.js";import API from"./api.js";import LoggerManager from"./logger.js";import NoticeManager from"./notice.js";export default class Manager{project;config={logger:{max_lines:1e4},philia:{name:`Philia`,type:`Socket`,role:`Server`,path:`Manager`}};logger;logger_manager;handle;philia;notice=new NoticeManager(this);constructor(i,a){this.project=i,Object.assign(this.config.logger,a?.logger),a?.philia&&(this.config.philia=a.philia),this.logger=makeLogger(`Manager`,this.config.logger.level,this.config.logger.inspect),this.logger_manager=new LoggerManager(this),this.handle=API(this),this.philia=new Philia.Project(this.config.philia,this.handle),this.philia.logger=this.logger}start(){return this.logger.info(`${this.project.config.name} 启动中……`),Promise.all([this.philia.start(),this.project.start()]).then(e=>(this.logger.info(`${this.project.config.name} 启动完成`),e))}stop(){return this.logger.info(`${this.project.config.name} 关闭中……`),Promise.all([this.project.stop(),this.philia.stop()]).then(e=>(this.logger.info(`${this.project.config.name} 关闭完成`),e))}}