import{ulid}from"ulid";import{makeError}from"#util";import*as Common from"./common.js";import*as Message from"./message.js";export default class Event{impl;constructor(e){this.impl=e}convert(e){if(typeof this[e.event_type]==`function`)return this[e.event_type](e);throw makeError(`未知事件: ${e.event_type}`,{event:e})}async IncomingForwardedMessage(e){let t=await new Message.MilkyToPhilia(this.impl,e).convert(),n={message:t.after,summary:t.summary,time:e.time,user:{name:e.name,avatar:e.avatar_url}};return n}async IncomingMessage(e){let t=await new Message.MilkyToPhilia(this.impl,e).convert(),i={raw:e,id:Common.encodeMessageID(e.message_scene,e.peer_id,e.message_seq),type:`message`,time:e.time,scene:`user`,message:t.after,summary:t.summary};switch(e.message_scene){case`friend`:i.user=this.impl.handle._convertUserInfo(e.friend);break;case`group`:i.scene=`group`,i.user=this.impl.handle._convertUserInfo(e.group_member),i.group=this.impl.handle._convertGroupInfo(e.group);break;case`temp`:e.group?(i.user=await this.impl.handle.getGroupMemberInfo({id:String(e.group.group_id),uid:String(e.sender_id)}),i.group=this.impl.handle._convertGroupInfo(e.group)):i.user={id:String(e.sender_id),name:`未知`}}return i}async message_receive(e){return this.IncomingMessage(e.data)}async bot_offline(t){let n={raw:t,id:ulid(),type:`notice`,scene:`bot_offline`,time:t.time,user:await this.impl.handle.getSelfInfo(),reason:t.data.reason};return n}async message_recall(t){let r,i={raw:t,id:ulid(),type:`notice`,time:t.time,message_id:Common.encodeMessageID(t.data.message_scene,t.data.peer_id,t.data.message_seq)};switch(t.data.message_scene){case`temp`:case`friend`:r={...i,scene:`user_message_recall`,user:await this.impl.handle.getUserInfo({id:String(t.data.peer_id)})},t.data.peer_id===t.data.sender_id&&(r.is_self=!0);break;case`group`:r={...i,scene:`group_message_recall`,user:await this.impl.handle.getGroupMemberInfo({id:String(t.data.peer_id),uid:String(t.data.operator_id)}),group:await this.impl.handle.getGroupInfo({id:String(t.data.peer_id)})},t.data.operator_id!==t.data.sender_id&&(r.target=await this.impl.handle.getGroupMemberInfo({id:String(t.data.peer_id),uid:String(t.data.sender_id)}));break}return r}async FriendRequest(e){let t={raw:e,id:Common.encodeRequestID(0,e.request_id),type:`request`,time:e.time,scene:`user_add`,user:await this.impl.handle.getUserInfo({id:String(e.initiator_id)}),state:e.state,reason:e.comment};return t}friend_request(e){return this.FriendRequest(e.data)}async GroupRequest(e){let t={raw:e,id:Common.encodeRequestID(1,e.request_id),type:`request`,time:e.time,scene:`group_add`,user:await this.impl.handle.getUserInfo({id:String(e.initiator_id)}),group:await this.impl.handle.getGroupInfo({id:String(e.group_id)}),state:e.state};switch(e.request_type){case`invite`:t.user=await this.impl.handle.getGroupMemberInfo({id:String(e.group_id),uid:String(e.initiator_id)}),t.target=await this.impl.handle.getUserInfo({id:String(e.invitee_id)});break;case`join`:t.reason=e.comment;break}return t}group_request(e){return this.GroupRequest(e.data)}async GroupInvitation(e){let t={raw:e,id:Common.encodeRequestID(2,e.request_id),type:`request`,time:e.time,scene:`group_invite`,user:await this.impl.handle.getUserInfo({id:String(e.initiator_id)}),group:await this.impl.handle.getGroupInfo({id:String(e.group_id)}),state:e.state};return t}group_invitation(e){return this.GroupInvitation(e.data)}async friend_nudge(t){let n={raw:t,id:ulid(),type:`notice`,time:t.time,scene:`user_poke`,user:await this.impl.handle.getUserInfo({id:String(t.data.user_id)})};return t.data.is_self_send&&(n.is_self=!0),t.data.is_self_receive&&(n.is_self_target=!0),n}async friend_file_upload(t){let r={raw:t,id:ulid(),type:`notice`,time:t.time,scene:`user_file_upload`,user:await this.impl.handle.getUserInfo({id:String(t.data.user_id)}),file:{type:`file`,name:t.data.file_name,size:t.data.file_size,data:`id`,id:Common.encodeFileID(1,t.data.file_id,t.data.user_id)}};return t.data.is_self&&(r.is_self=!0),r}async group_admin_change(t){let n={raw:t,id:ulid(),type:`notice`,time:t.time,scene:`group_member_info`,user:(await this.impl.handle.getGroupMemberArray({id:String(t.data.group_id)})).find(e=>e.role===`owner`),target:await this.impl.handle.getGroupMemberInfo({id:String(t.data.group_id),uid:String(t.data.user_id)}),group:await this.impl.handle.getGroupInfo({id:String(t.data.group_id)}),change:{role:t.data.is_set?`admin`:`member`}};return n}async group_essence_message_change(t){let r=await this.impl.handle.getMsg({id:Common.encodeMessageID(`group`,t.data.group_id,t.data.message_seq)}),i={raw:t,id:ulid(),type:`notice`,time:t.time,scene:`group_essence_message_${t.data.is_set?`add`:`del`}`,user:r.user,group:await this.impl.handle.getGroupInfo({id:String(t.data.group_id)}),message_id:r.id};return i}async group_member_increase(t){let n={raw:t,id:ulid(),type:`notice`,time:t.time,scene:`group_member_add`,user:await this.impl.handle.getGroupMemberInfo({id:String(t.data.group_id),uid:String(t.data.user_id)}),group:await this.impl.handle.getGroupInfo({id:String(t.data.group_id)})};return t.data.operator_id&&(n.operator=await this.impl.handle.getGroupMemberInfo({id:String(t.data.group_id),uid:String(t.data.operator_id)})),t.data.invitor_id&&(n.invitor=await this.impl.handle.getGroupMemberInfo({id:String(t.data.group_id),uid:String(t.data.invitor_id)})),n}async group_member_decrease(t){let n={raw:t,id:ulid(),type:`notice`,time:t.time,scene:`group_member_del`,user:await this.impl.handle.getGroupMemberInfo({id:String(t.data.group_id),uid:String(t.data.user_id)}),group:await this.impl.handle.getGroupInfo({id:String(t.data.group_id)})};return t.data.operator_id&&(n.operator=await this.impl.handle.getGroupMemberInfo({id:String(t.data.group_id),uid:String(t.data.operator_id)})),n}async group_name_change(t){let n={raw:t,id:ulid(),type:`notice`,time:t.time,scene:`group_info`,user:await this.impl.handle.getGroupMemberInfo({id:String(t.data.group_id),uid:String(t.data.operator_id)}),group:await this.impl.handle.getGroupInfo({id:String(t.data.group_id)}),change:{name:t.data.name}};return n}async group_message_reaction(t){let r={raw:t,id:ulid(),type:`notice`,time:t.time,scene:`group_message_reaction_${t.data.is_add===!1?`del`:`add`}`,user:await this.impl.handle.getGroupMemberInfo({id:String(t.data.group_id),uid:String(t.data.user_id)}),group:await this.impl.handle.getGroupInfo({id:String(t.data.group_id)}),message_id:Common.encodeMessageID(`group`,t.data.group_id,t.data.message_seq),data:{type:`face`,id:t.data.face_id}};return r}async group_mute(t){let n={raw:t,id:ulid(),type:`notice`,time:t.time,scene:`group_member_info`,user:await this.impl.handle.getGroupMemberInfo({id:String(t.data.group_id),uid:String(t.data.operator_id)}),target:await this.impl.handle.getGroupMemberInfo({id:String(t.data.group_id),uid:String(t.data.user_id)}),group:await this.impl.handle.getGroupInfo({id:String(t.data.group_id)}),change:{mute_time:t.data.duration}};return n}async group_whole_mute(t){let n={raw:t,id:ulid(),type:`notice`,time:t.time,scene:`group_info`,user:await this.impl.handle.getGroupMemberInfo({id:String(t.data.group_id),uid:String(t.data.operator_id)}),group:await this.impl.handle.getGroupInfo({id:String(t.data.group_id)}),change:{whole_mute:t.data.is_mute}};return n}async group_nudge(t){let n={raw:t,id:ulid(),type:`notice`,time:t.time,scene:`group_poke`,user:await this.impl.handle.getGroupMemberInfo({id:String(t.data.group_id),uid:String(t.data.sender_id)}),group:await this.impl.handle.getGroupInfo({id:String(t.data.group_id)})};return t.data.sender_id!==t.data.receiver_id&&(n.target=await this.impl.handle.getGroupMemberInfo({id:String(t.data.group_id),uid:String(t.data.receiver_id)})),n}async group_file_upload(t){let r={raw:t,id:ulid(),type:`notice`,time:t.time,scene:`group_file_upload`,user:await this.impl.handle.getGroupMemberInfo({id:String(t.data.group_id),uid:String(t.data.user_id)}),group:await this.impl.handle.getGroupInfo({id:String(t.data.group_id)}),file:{type:`file`,name:t.data.file_name,size:t.data.file_size,data:`id`,id:Common.encodeFileID(2,t.data.file_id,t.data.group_id)}};return r}}