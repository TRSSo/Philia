import{toJSON}from"#util";import{Common}from"./index.js";import*as MessageConverter from"./message.js";export default class PhiliaToMilky{impl;cache=new Map;user_cache=new Map;group_cache=new Map;group_member_cache=new Map;constructor(e){this.impl=e}async getVersion(){let e=await this.impl.api.get_impl_info();return{impl:{id:`QQ`,name:`Milky`,version:e.milky_version},proto:{id:e.impl_name,name:`${e.qq_protocol_type}-${e.qq_protocol_version}`,version:e.impl_version}}}receiveEvent({event:e},t){return this.impl.event_handle.receive(e,t)}unreceiveEvent({event:e},t){return this.impl.event_handle.unreceive(e,t)}async getSelfInfo({refresh:e}={}){if(!e){let e=this.cache.get(`self_info`);if(e)return e}let t=await this.impl.api.get_login_info(),n={avatar:`https://q.qlogo.cn/g?b=qq&s=0&nk=${t.uin}`,...t,id:String(t.uin),name:t.nickname};return this.cache.set(`self_info`,n),n}async setSelfInfo(){}_convertUserInfo(e){let t=String(e.user_id),n={...this.user_cache.get(t),avatar:`https://q.qlogo.cn/g?b=qq&s=0&nk=${t}`,...e,id:t,name:e.nickname};return this.user_cache.set(t,n),n}async getUserInfo({id:e,refresh:t}){if(!t){let t=this.user_cache.get(e);if(t)return t}let n=await this.impl.api.get_friend_info({user_id:+e,no_cache:t});return this._convertUserInfo(n.friend)}_convertGroupInfo(e){let t=String(e.group_id),n={...this.group_cache.get(t),avatar:`https://p.qlogo.cn/gh/${t}/${t}/0`,...e,id:t,name:e.name};return this.group_cache.set(t,n),n}async getGroupInfo({id:e,refresh:t}){if(!t){let t=this.group_cache.get(e);if(t)return t}let n=await this.impl.api.get_group_info({group_id:+e,no_cache:t});return this._convertGroupInfo(n.group)}_convertGroupMemberInfo(e){let t=String(e.user_id),n=String(e.group_id),r={...this.group_member_cache.get(n)?.get(t),avatar:`https://q.qlogo.cn/g?b=qq&s=0&nk=${e.user_id}`,...e,id:t,name:e.nickname},i=this.group_member_cache.get(n);return i||(i=new Map,this.group_member_cache.set(n,i)),i.set(t,r),r}async getGroupMemberInfo({id:e,uid:t,refresh:n}){if(!n){let n=this.group_member_cache.get(e)?.get(t);if(n)return n}let r=await this.impl.api.get_group_member_info({group_id:+e,user_id:+t,no_cache:n});return this._convertGroupMemberInfo(r.member)}async setInfo({scene:t,id:n,data:r}){switch(t){case`user`:break;case`group`:r.name!==void 0&&await this.impl.api.set_group_name({group_id:+n,name:r.name}),r.avatar!==void 0&&await this.impl.api.set_group_avatar({group_id:+n,image_uri:toJSON(r.avatar)}),r.whole_mute!==void 0&&await this.impl.api.set_group_whole_mute({group_id:+n,is_mute:r.whole_mute});break}}async setGroupMemberInfo({id:e,uid:t,data:n}){n.card!==void 0&&await this.impl.api.set_group_member_card({group_id:+e,user_id:+t,card:n.card}),n.title!==void 0&&await this.impl.api.set_group_member_special_title({group_id:+e,user_id:+t,special_title:n.title}),n.role!==void 0&&await this.impl.api.set_group_member_admin({group_id:+e,user_id:+t,is_set:n.role===`admin`}),n.mute_time!==void 0&&await this.impl.api.set_group_member_mute({group_id:+e,user_id:+t,duration:n.mute_time})}delUser(){}async delGroup({id:e,dismiss:t}){if(!(!t&&(await this.getGroupMemberInfo({id:e,uid:(await this.getSelfInfo()).id})).role===`owner`))return this.impl.api.quit_group({group_id:+e})}delGroupMember({id:e,uid:t,block:n}){return this.impl.api.kick_group_member({group_id:+e,user_id:+t,reject_add_request:n})}async sendMsg({scene:e,id:r,data:i}){let a=await new MessageConverter.PhiliaToMilky(this.impl,e,r,i).convert();if(!a.after.length){if(!a.summary)throw Error(`空消息`);return{id:``,time:Math.floor(Date.now()/1e3)}}let o=+r,s=await(e===`user`?this.impl.api.send_private_message({user_id:o,message:a.after}):this.impl.api.send_group_message({group_id:o,message:a.after})),c={time:s.time??Math.floor(Date.now()/1e3),id:Common.encodeMessageID(e===`user`?`friend`:e,o,s.message_seq),raw:{...s,seq:s.message_seq}};return a.file_id&&(c.file_id=a.file_id),c}async sendMultiMsg({scene:e,id:t,data:r}){let i=[];for(let a of r){let r=await new MessageConverter.PhiliaToMilky(this.impl,e,t,a.message).convert();if(!r.after.length)continue;i.push({user_id:Number(a.user?.id)||8e7,name:a.user?.name||`匿名消息`,segments:r.after})}if(!i.length)return[{id:``,time:Math.floor(Date.now()/1e3)}];let a=await this.sendMsg({scene:e,id:t,data:{type:`platform`,mode:`include`,list:`Milky`,data:{type:`forward`,data:{messages:i}}}});return[a]}async _getFileUri(t){let n=``;switch(t.data){case`id`:return this._getFileUri(await this.getFile({id:t.id}));case`path`:n=`file://${t.path}`;break;case`binary`:case`url`:n=toJSON(t.binary||t.url);break}return n}async _sendFile({scene:e,id:n,data:r}){let i=await this._getFileUri(r),a=+n,o,s;return e===`user`?(o=(await this.impl.api.upload_private_file({user_id:a,file_uri:i,file_name:r.name})).file_id,s=1):(o=(await this.impl.api.upload_group_file({group_id:a,file_uri:i,file_name:r.name})).file_id,s=2),Common.encodeFileID(s,o,a)}async getMsg({id:e}){let n=await this.impl.api.get_message(Common.decodeMessageID(e));return this.impl.event.IncomingMessage(n.message)}delMsg({id:e}){let{message_scene:n,peer_id:r,message_seq:i}=Common.decodeMessageID(e);return n===`group`?this.impl.api.recall_group_message({group_id:r,message_seq:i}):this.impl.api.recall_private_message({user_id:r,message_seq:i})}async sendMsgForward({scene:e,id:n,mid:r}){let{message:i}=await this.impl.api.get_message(Common.decodeMessageID(r));return this.sendMsg({scene:e,id:n,data:{type:`platform`,mode:`include`,list:`Milky`,data:i.segments}})}async getFile({id:e}){let{scene:n,id:r,peer_id:i}=Common.decodeFileID(e),a={data:`url`};switch(n){case 0:a.url=(await this.impl.api.get_resource_temp_url({resource_id:r})).url;break;case 1:a.url=(await this.impl.api.get_private_file_download_url({user_id:i,file_id:r})).download_url;break;case 2:a.url=(await this.impl.api.get_group_file_download_url({group_id:i,file_id:r})).download_url;break}return a}async getForwardMsg({id:e}){let t=await this.impl.api.get_forwarded_messages({forward_id:e});return Promise.all(t.messages.map(this.impl.event.IncomingForwardedMessage.bind(this.impl.event)))}async getChatHistory({type:e,id:n,count:r,newer:i}){let a;if(e===`message`){let{message_scene:e,peer_id:o,message_seq:s}=Common.decodeMessageID(n);a=await this.impl.api.get_history_messages({message_scene:e,peer_id:o,start_message_seq:s,direction:i?`newer`:`older`,limit:r})}else a=await this.impl.api.get_history_messages({message_scene:e===`user`?`friend`:e,peer_id:+n,direction:i?`newer`:`older`,limit:r});return Promise.all(a.messages.map(this.impl.event.IncomingMessage.bind(this.impl.event)))}async getUserList({refresh:e}={}){if(!e&&this.user_cache.size!==0)return Array.from(this.user_cache.keys());let t=await this.impl.api.get_friend_list({no_cache:e});return t.friends.map(e=>String(e.user_id))}async getUserArray({refresh:e}={}){if(!e&&this.user_cache.size!==0)return Array.from(this.user_cache.values());let t=await this.impl.api.get_friend_list({no_cache:e});return t.friends.map(this._convertUserInfo.bind(this))}async getGroupList({refresh:e}={}){if(!e&&this.group_cache.size!==0)return Array.from(this.group_cache.keys());let t=await this.impl.api.get_group_list({no_cache:e});return t.groups.map(e=>String(e.group_id))}async getGroupArray({refresh:e}={}){if(!e&&this.group_cache.size!==0)return Array.from(this.group_cache.values());let t=await this.impl.api.get_group_list({no_cache:e});return t.groups.map(this._convertGroupInfo.bind(this))}async getGroupMemberList({id:e,refresh:t}){if(!t){let t=this.group_member_cache.get(e);if(t&&t.size!==0)return Array.from(this.group_cache.keys())}let n=await this.impl.api.get_group_member_list({group_id:+e,no_cache:t});return n.members.map(e=>String(e.user_id))}async getGroupMemberArray({id:e,refresh:t}){if(!t){let t=this.group_member_cache.get(e);if(t&&t.size!==0)return Array.from(t.values())}let n=await this.impl.api.get_group_member_list({group_id:+e,no_cache:t});return n.members.map(e=>this._convertGroupMemberInfo(e))}async getRequestArray({scene:e,count:t}={}){let n;switch(e){case`user_add`:{let e=await this.impl.api.get_friend_requests({limit:t});n=e.requests.map(this.impl.event.FriendRequest.bind(this.impl.event));break}case`group_add`:{let e=await this.impl.api.get_group_requests({limit:t});n=e.requests.map(this.impl.event.GroupRequest.bind(this.impl.event));break}case`group_invite`:{let e=await this.impl.api.get_group_invitations({limit:t});n=e.invitations.map(this.impl.event.GroupInvitation.bind(this.impl.event));break}default:n=(await Promise.all([this.getRequestArray({scene:`user_add`,count:t}),this.getRequestArray({scene:`group_add`,count:t}),this.getRequestArray({scene:`group_invite`,count:t})])).flat().slice(0,t)}return Promise.all(n)}setRequest({id:e,result:n,reason:r}){let i=Common.decodeRequestID(e);switch(i.scene){case 0:return n?this.impl.api.accept_friend_request({request_id:e}):this.impl.api.reject_friend_request({request_id:e,reason:r});case 1:return n?this.impl.api.accept_group_request({request_id:e}):this.impl.api.reject_group_request({request_id:e,reason:r});case 2:return n?this.impl.api.accept_group_invitation({request_id:e}):this.impl.api.reject_group_invitation({request_id:e})}}uploadCacheFile(){throw Error(`暂不支持`)}clearCache(){}async sendPoke({scene:e,id:t,tid:n}){return e===`user`?this.impl.api.send_friend_nudge({user_id:+t,is_self:n===(await this.getSelfInfo()).id}):this.impl.api.send_group_nudge({group_id:+t,user_id:+n})}async getGroupAnnounceList({id:e}){let t=await this.impl.api.get_group_announcement_list({group_id:+e});return t.announcements.map(e=>({id:e.announcement_id,time:e.time,gid:String(e.group_id),uid:String(e.user_id),content:e.content,image:{data:`url`,url:e.image_url}}))}async sendGroupAnnounce({id:e,content:t,image:n}){return this.impl.api.send_group_announcement({group_id:+e,content:t,image_uri:n?await this._getFileUri(n):void 0})}delGroupAnnounce({id:e,gid:t}){return this.impl.api.delete_group_announcement({group_id:+t,announcement_id:e})}}