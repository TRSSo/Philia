import{toJSON}from"#util";import*as MessageConverter from"./message.js";export class PhiliaToOBv11{client;cache=new Map;user_cache=new Map;group_cache=new Map;group_member_cache=new Map;constructor(e){this.client=e}async getVersion(){let e=await this.client.api.get_version_info();return{impl:{id:`QQ`,name:`OneBotv11`,version:e.protocol_version},proto:{id:e.app_name,name:e.app_full_name||`${e.app_name}-${e.app_version}`,version:e.app_version}}}receiveEvent({event:e},t){return this.client.event_handle.receive(e,t)}unreceiveEvent({event:e},t){return this.client.event_handle.unreceive(e,t)}async getSelfInfo({refresh:e}={}){if(!e){let e=this.cache.get(`self_info`);if(e)return e}let t=await this.client.api.get_login_info(),n={avatar:`https://q.qlogo.cn/g?b=qq&s=0&nk=${t.user_id}`,...t,id:String(t.user_id),name:t.nickname};return this.cache.set(`self_info`,n),n}async setSelfInfo({data:t}){t.name&&await this.client.api.set_qq_profile({nickname:t.name,personal_note:t.personal_note}),t.avatar&&await this.client.api.set_qq_avatar({file:toJSON(t.avatar)})}_convertUserInfo(e){let t=String(e.user_id),n={...this.user_cache.get(t),avatar:`https://q.qlogo.cn/g?b=qq&s=0&nk=${t}`,...e,id:t,name:e.nickname};return this.user_cache.set(t,n),n}async getUserInfo({id:e,refresh:t}){if(!t){let t=this.user_cache.get(e);if(t)return t}let n=await this.client.api.get_stranger_info({user_id:+e,no_cache:t});return this._convertUserInfo(n)}_convertGroupInfo(e){let t=String(e.group_id),n={...this.group_cache.get(t),avatar:`https://p.qlogo.cn/gh/${t}/${t}/0`,...e,id:t,name:e.group_name,remark:e.group_memo};return this.group_cache.set(t,n),n}async getGroupInfo({id:e,refresh:t}){if(!t){let t=this.group_cache.get(e);if(t)return t}let n=await this.client.api.get_group_info({group_id:+e,no_cache:t});return this._convertGroupInfo(n)}_convertGroupMemberInfo(e,t){let n=String(t.user_id),r={...this.group_member_cache.get(e)?.get(n),avatar:`https://q.qlogo.cn/g?b=qq&s=0&nk=${t.user_id}`,...t,id:n,name:t.nickname},i=this.group_member_cache.get(e);return i||(i=new Map,this.group_member_cache.set(e,i)),i.set(n,r),r}async getGroupMemberInfo({id:e,uid:t,refresh:n}){if(!n){let n=this.group_member_cache.get(e)?.get(t);if(n)return n}let r=await this.client.api.get_group_member_info({group_id:+e,user_id:+t,no_cache:n});return this._convertGroupMemberInfo(e,r)}async setInfo({scene:t,id:n,data:r}){switch(t){case`user`:r.remark!==void 0&&await this.client.api.set_friend_remark({user_id:+n,remark:r.remark});break;case`group`:r.name!==void 0&&await this.client.api.set_group_name({group_id:+n,group_name:r.name}),r.avatar!==void 0&&await this.client.api.set_group_portrait({group_id:+n,file:toJSON(r.avatar)}),r.remark!==void 0&&await this.client.api.set_group_remark({group_id:+n,remark:r.remark}),r.whole_mute!==void 0&&await this.client.api.set_group_whole_ban({group_id:+n,enable:r.whole_mute});break}}async setGroupMemberInfo({id:e,uid:t,data:n}){n.card!==void 0&&await this.client.api.set_group_card({group_id:+e,user_id:+t,card:n.card}),n.role!==void 0&&await this.client.api.set_group_admin({group_id:+e,user_id:+t,enable:n.role===`admin`}),n.title!==void 0&&await this.client.api.set_group_special_title({group_id:+e,user_id:+t,special_title:n.title}),n.mute_time!==void 0&&await this.client.api.set_group_ban({group_id:+e,user_id:+t,duration:n.mute_time})}delUser({id:e}){return this.client.api.delete_friend({user_id:+e})}delGroup({id:e,dismiss:t}){return this.client.api.set_group_leave({group_id:+e,is_dismiss:t})}delGroupMember({id:e,uid:t,block:n}){return this.client.api.set_group_kick({group_id:+e,user_id:+t,reject_add_request:n})}async sendMsg({scene:e,id:n,data:r}){let i=await new MessageConverter.PhiliaToOBv11(this.client,e,n,r).convert();if(!i.after.length){if(!i.summary)throw Error(`空消息`);return{id:``,time:Math.floor(Date.now()/1e3)}}let a=await this.client.api.send_msg({[e===`user`?`user_id`:`group_id`]:+n,message:i.after});return{time:Math.floor(Date.now()/1e3),...a,id:String(a.message_id)}}async sendMultiMsg({scene:e,id:n,data:r}){let i=[];for(let a of r){let r=await new MessageConverter.PhiliaToOBv11(this.client,e,n,a.message).convert();if(!r.after.length)continue;let o=String(Number(a.user?.id)||8e7),s=a.user?.name||`匿名消息`;i.push({type:`node`,data:{time:a.time,user_id:o,nickname:s,uin:o,name:s,content:r.after}})}if(!i.length)return[{id:``,time:Math.floor(Date.now()/1e3)}];let a=await(e===`user`?this.client.api.send_private_forward_msg({user_id:+n,messages:i}):this.client.api.send_group_forward_msg({group_id:+n,messages:i}));return[{time:Math.floor(Date.now()/1e3),...a,id:String(a.message_id)}]}async _sendFile({scene:e,id:t,data:n}){let r=``;switch(n.data){case`id`:case`path`:r=n.id||n.path;break;case`binary`:case`url`:r=await this.uploadCacheFile({file:n.binary||n.url});break}return e===`user`?this.client.api.upload_private_file({user_id:+t,file:r,name:n.name}):this.client.api.upload_group_file({group_id:+t,file:r,name:n.name})}async getMsg({id:e}){let t=await this.client.api.get_msg({message_id:+e});return this.client.protocol.convert.message(t)}delMsg({id:e}){return this.client.api.delete_msg({message_id:+e})}async sendMsgForward({scene:e,id:t,mid:n}){let r=await this.client.api.get_msg({message_id:+n}),i=await this.client.api.send_msg({[e===`user`?`user_id`:`group_id`]:+t,message:r.message});return{time:Math.floor(Date.now()/1e3),...i,id:String(i.message_id)}}getFile({id:e}){return{id:e}}async getForwardMsg({id:e}){let t=await this.client.api.get_forward_msg({message_id:+e});return Promise.all(t.message.map(this.client.protocol.convert.message.bind(this.client.protocol.convert)))}async getChatHistory({type:e,id:t,count:n,newer:r}){if(r)throw Error(`暂不支持获取新消息`);let i;if(e===`message`){let e=await this.client.api.get_msg({message_id:+t});i=await(e.message_type===`private`?this.client.api.get_friend_msg_history({user_id:e.user_id,message_seq:e.message_seq||e.message_id,count:n}):this.client.api.get_group_msg_history({group_id:e.group_id,message_seq:e.message_seq||e.message_id,count:n}))}else i=await(e===`user`?this.client.api.get_friend_msg_history({user_id:+t}):this.client.api.get_group_msg_history({group_id:+t}));return Promise.all(i.messages.map(this.client.protocol.convert.message.bind(this.client.protocol.convert)))}async getUserList({refresh:e}={}){return!e&&this.user_cache.size!==0?Array.from(this.user_cache.keys()):(await this.client.api.get_friend_list()).map(e=>String(e.user_id))}async getUserArray({refresh:e}={}){return!e&&this.user_cache.size!==0?Array.from(this.user_cache.values()):(await this.client.api.get_friend_list()).map(this._convertUserInfo.bind(this))}async getGroupList({refresh:e}={}){return!e&&this.group_cache.size!==0?Array.from(this.group_cache.keys()):(await this.client.api.get_group_list()).map(e=>String(e.group_id))}async getGroupArray({refresh:e}={}){return!e&&this.group_cache.size!==0?Array.from(this.group_cache.values()):(await this.client.api.get_group_list()).map(this._convertGroupInfo.bind(this))}async getGroupMemberList({id:e,refresh:t}){if(!t){let t=this.group_member_cache.get(e);if(t&&t.size!==0)return Array.from(this.group_cache.keys())}return(await this.client.api.get_group_member_list({group_id:+e})).map(e=>String(e.user_id))}async getGroupMemberArray({id:e,refresh:t}){if(!t){let t=this.group_member_cache.get(e);if(t&&t.size!==0)return Array.from(t.values())}return(await this.client.api.get_group_member_list({group_id:+e})).map(t=>this._convertGroupMemberInfo(e,t))}getRequestArray({scene:e,count:t}={}){let n=Array.from(this.client.protocol.convert.event_map.values());return e&&(n=n.filter(t=>t.scene===e)),t&&(n=n.slice(0,t)),n}async setRequest({id:e,result:t,reason:n}){let r=this.client.protocol.convert.event_map.get(e);if(!r)throw Error(`未找到请求`);r.scene===`user_add`?await this.client.api.set_friend_add_request({flag:e,approve:t}):await this.client.api.set_group_add_request({flag:e,approve:t,reason:n}),r.state=t?`accepted`:`rejected`}async uploadCacheFile({file:e}){let t={};return Buffer.isBuffer(e)?t.base64=e.toString(`base64`):e.startsWith(`base64://`)?t.base64=e.replace(`base64://`,``):t.file=e,(await this.client.api.download_file(t)).file}clearCache(){return this.client.api.clean_cache()}}