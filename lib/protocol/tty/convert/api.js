import fs from"node:fs/promises";import os from"node:os";import path from"node:path";import{ulid}from"ulid";import{toBuffer}from"#util";import MessageConvert from"./message.js";export default class PhiliaToTTY{impl;constructor(e){this.impl=e}getVersion(){return{impl:{id:`TTY`,name:`终端`,version:`1`},proto:{id:process.platform,name:`${os.type()} ${os.machine()} ${os.release()}`,version:`${process.release.name} ${process.version} ${process.arch}`}}}receiveEvent({event:e},t){return this.impl.event_handle.receive(e,t)}unreceiveEvent({event:e},t){return this.impl.event_handle.unreceive(e,t)}getSelfInfo(){return this.impl.self}setSelfInfo({data:e}){Object.assign(this.impl.self,e)}getUserInfo({id:e}){for(let t of this.getUserArray())if(t.id===e)return t;throw Error(`未找到用户`)}getGroupInfo({id:e}){for(let t of this.getGroupArray())if(t.id===e)return t;throw Error(`未找到群`)}getGroupMemberInfo({id:e,uid:t}){for(let n of this.getGroupMemberArray({id:e}))if(n.id===t)return n;throw Error(`未找到群成员`)}_getInfo({scene:e,id:t}){switch(e){case`user`:return this.getUserInfo({id:t});case`group`:return this.getGroupInfo({id:t})}}setInfo({scene:e,id:t,data:n}){Object.assign(this._getInfo({scene:e,id:t}),n)}setGroupMemberInfo({id:e,uid:t,data:n}){Object.assign(this.getGroupMemberInfo({id:e,uid:t}),n)}delUser({id:e}){throw this.getUserInfo({id:e}),Error(`无法删除用户`)}delGroup({id:e}){throw this.getGroupInfo({id:e}),Error(`无法删除群`)}delGroupMember({id:e,uid:t}){throw this.getGroupMemberInfo({id:e,uid:t}),Error(`无法删除群成员`)}async sendMsg({scene:e,id:t,data:n}){let i=await new MessageConvert(this.impl,n).convert();this.impl.logger.info(`发送${e===`user`?`用户`:`群`}消息 ${t} ${i}`);let o={id:ulid(),time:Date.now()/1e3},s={...o,type:`message`,scene:e,message:n,summary:i};return e===`user`?(s.is_self=!0,s.user=this.getUserInfo({id:t})):(s.user=this.getSelfInfo(),s.group=this.getGroupInfo({id:t})),this.impl.event_message_map.set(o.id,s),o}async sendMultiMsg({scene:e,id:t,data:n}){let r=[];for(let i of n)r.push(await this.sendMsg({scene:e,id:i.user?.id||t,data:i.message}));return r}getMsg({id:e}){let t=this.impl.event_message_map.get(e);if(!t)throw Error(`未找到消息`);return t}delMsg({id:e}){this.getMsg({id:e})}sendMsgForward({scene:e,id:t,mid:n}){let{message:r}=this.getMsg({id:n});return this.sendMsg({scene:e,id:t,data:r})}async getFile({id:t}){return{type:`file`,name:t,data:`binary`,binary:await fs.readFile(path.join(this.impl.path,`temp`,t))}}getChatHistory({type:e,id:t,count:n,newer:r}){let i=[];if(e===`message`){let e=this.getMsg({id:t});for(let t of[...this.impl.event_message_map.values()].reverse())if(t.scene===e.scene&&t[e.scene]?.id===e[e.scene]?.id&&(r?t.time>=e.time:t.time<=e.time)&&(i.push(t),n&&i.length===n))break}else for(let r of[...this.impl.event_message_map.values()].reverse())if(r.scene===e&&r[e]?.id===t&&(i.push(r),n&&i.length===n))break;return i}getUserList(){return this.getUserArray().map(e=>e.id)}getUserArray(){return[this.impl.user,this.impl.self]}getGroupList(){return this.getGroupArray().map(e=>e.id)}getGroupArray(){return[this.impl.group]}getGroupMemberList({id:e}){return this.getGroupMemberArray({id:e}).map(e=>e.id)}getGroupMemberArray({id:e}){return this.getGroupInfo({id:e})&&this.getUserArray()}getRequestArray({scene:e,count:t}={}){let n=Array.from(this.impl.event_request_map.values());return e&&(n=n.filter(t=>t.scene===e)),t&&(n=n.slice(0,t)),n}async setRequest({id:e,result:t}){let n=this.impl.event_request_map.get(e);if(!n)throw Error(`未找到请求`);n.state=t?`accepted`:`rejected`}async uploadCacheFile({file:t}){let a=ulid();return await fs.writeFile(path.join(this.impl.path,`temp`,a),await toBuffer(t)),a}async clearCache(){let t=path.join(this.impl.path,`temp`);await fs.rm(t,{recursive:!0,force:!0}),await fs.mkdir(t)}}